{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAwBpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAhCbL,EAAKa,iBAAiB,UAAUC,IAC9BA,EAAMC,iBAEN,MAAMC,EAAahB,EAAKiB,SAASZ,MAC3Ba,EAAYlB,EAAKiB,SAASE,KAC1BC,EAAcpB,EAAKiB,SAASI,OAE5BC,EAAQC,SAASP,EAAWQ,OAC5BL,EAAOI,SAASL,EAAUM,OAC1BH,EAASE,SAASH,EAAYI,OAEpC,IAAK,IAAIC,EAAI,EAAGA,GAAKJ,EAAQI,IAC3BtB,EAAcsB,EAAGH,GAASG,EAAI,GAAKN,GAChCO,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBsB,EAAA7B,GAAS8B,OAAOC,QAAQ,qBAAqBzB,QAAeC,MAAU,IAEvEyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBsB,EAAA7B,GAAS8B,OAAOG,QAAQ,oBAAoB3B,QAAeC,MAAU,GACrE","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const delayInput = form.elements.delay;\n  const stepInput = form.elements.step;\n  const amountInput = form.elements.amount;\n\n  const delay = parseInt(delayInput.value);\n  const step = parseInt(stepInput.value);\n  const amount = parseInt(amountInput.value);\n\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay + (i - 1) * step)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delayInput","elements","stepInput","step","amountInput","amount","delay1","parseInt","value","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.5a67eb57.js.map"}